# 튜플
# 시퀀스 자료형
# 수정, 추가, 삭제가 불가능한 리스트
# 메모리 사용이 효율적
# 읽기만 가능하기 때문에 데이터 손실 염려가 없다.
# 리스트 = []대괄호
# 튜플 = (a, b, c)
# 튜플은소괄호없이사용가능 = 데이터, 데이터, 데이터
# 튜플 a = (a,)
# 튜플 a = a,
# 딕셔너리 = {}f string, dict
# He is (are X) 익숙해지면 해결

# 튜플을 리스트로 만들기
a = tuple([5,6,7]) # (5,6,7)
x = list(range(10)) # [0,1,2,...,9]
b = tuple(x) # (0,1,2,...,9)
y = 5,6,7 # tuple
c = list(y) # [5,6,7]

# 패킹과 언패킹

numbers = 3,4,5 # 패킹, 과자봉지처럼 묶듯
a, b, c = numbers # 언패킹 a = 3, b = 4, c = 5
# 리스트도 마찬가지
number = [3,4,5]
a, b, c = number # a =3, b= 4, c =5

a , b = b, a # b = a, a = b

# 패킹 : 여러개의 데이터를 하나의 변수에 할당하는 것
# 언패킹 : 컬렉션(리스트,튜플,딕셔너리)의 각 데이터를 각각의 변수에 할당하는 것

# 튜플 함수
e = 10, 20, 30, 40, 30
e.index(20) # 특정값의 인덱스 구하기 : 1
e.count(30) # 특정값의 개수 : 2
max(e), min(e) # 최대값, 최소값 : 40, 10
sum(e) # 합계 : 130
